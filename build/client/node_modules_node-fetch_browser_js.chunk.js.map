{"version":3,"sources":["webpack:///./node_modules/node-fetch/browser.js"],"names":["getGlobal","self","window","global","Error","module","exports","fetch","bind","Headers","Request","Response"],"mappings":";;;;;;;;;CAEA;;AACA,IAAIA,SAAS,GAAG,SAAZA,SAAY,GAAY;AAC3B;AACA;AACA;AACA,MAAI,OAAOC,IAAP,KAAgB,WAApB,EAAiC;AAAE,WAAOA,IAAP;AAAc;;AACjD,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAAE,WAAOA,MAAP;AAAgB;;AACrD,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAAE,WAAOA,MAAP;AAAgB;;AACrD,QAAM,IAAIC,KAAJ,CAAU,gCAAV,CAAN;AACA,CARD;;AAUA,IAAID,MAAM,GAAGH,SAAS,EAAtB;AAEAK,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAGH,MAAM,CAACI,KAAlC,C,CAEA;;AACA,IAAIJ,MAAM,CAACI,KAAX,EAAkB;AACjBD,iBAAA,GAAkBH,MAAM,CAACI,KAAP,CAAaC,IAAb,CAAkBL,MAAlB,CAAlB;AACA;;AAEDG,eAAA,GAAkBH,MAAM,CAACM,OAAzB;AACAH,eAAA,GAAkBH,MAAM,CAACO,OAAzB;AACAJ,gBAAA,GAAmBH,MAAM,CAACQ,QAA1B,C","file":"node_modules_node-fetch_browser_js.chunk.js","sourcesContent":["\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;"],"sourceRoot":""}